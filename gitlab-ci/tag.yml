release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  variables:
    GIT_DEPTH: 0
  before_script:
    - |
      echo "Checking for merge commit..."
      PARENT_COUNT=$(git log -1 --pretty=%P | wc -w)
      git log -1 --pretty=%P
      echo "PARENT_COUNT:$PARENT_COUNT"
      if [ "$PARENT_COUNT" -eq 2 ]; then
        echo "Detected merge commit. Proceeding with release."
      else
        echo "Not a merge commit. Skipping release."
        exit 0
      fi

    - |
      apk add --no-cache curl jq
      MR_ID=$(curl --silent --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests?state=merged&target_branch=$CI_DEFAULT_BRANCH&order_by=updated_at&sort=desc" \
        | jq '.[0].iid')
        echo "Found MR ID: $MR_ID"

      LABELS=$(curl --silent --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests/$MR_ID" \
        | jq -r '.labels | join(",")')

      echo "Merge Request Labels: $LABELS"

    - VERSION_FILE=."/$CI_PROJECT_NAME/__init__.py"
    # - VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
    - VERSION=$(git tag --sort=creatordate | tail -n 1)
    - git remote set-url origin http://sigzen:$GITLAB_TOKEN@192.168.1.51/$CI_PROJECT_PATH
    
  script:
    - description=$(git log $(git describe --tags --abbrev=0 --always)..HEAD --pretty=format:"- %s")
    # bump version
    - |  
      echo $CI_MERGE_REQUEST_ID
      echo "Incrementing Tag Version" 
      echo "Current Version:$VERSION"  
      PATCH=$(echo $VERSION | cut -d. -f3)
      MINOR=$(echo $VERSION | cut -d. -f2)
      MAJOR=$(echo $VERSION | cut -d. -f1)
      if echo "$LABELS" | grep -q "Minor" || [ "$PATCH" -eq 99 ]; then
        MINOR=$((MINOR + 1))
        PATCH=0
      elif echo "$LABELS" | grep -q "Major"; then
        MAJOR=$((MAJOR + 1))
        MINOR=0
        PATCH=0
      elif [ -z "$VERSION" ]; then
        MAJOR=1
        MINOR=0
        PATCH=0
      else
        PATCH=$((PATCH + 1))
      fi
      
      NEW_VERSION=$MAJOR.$MINOR.$PATCH
      echo "New Version:$NEW_VERSION"

    # Update version in __init__.py
    - git pull origin $CI_COMMIT_BRANCH 
    - sed -i'' -e "s/__version__ = .*/__version__ = '$NEW_VERSION'/" $VERSION_FILE
    # Commit the change and creating a tag
    - |
      git config user.email "support@gitlab.sigzencloud.com"
      git config user.name "GitLab Support Bot"
      git add $VERSION_FILE
      git commit -m "chore: bump version to $NEW_VERSION"
      git push origin HEAD:$CI_COMMIT_BRANCH 
      git tag -a $NEW_VERSION -m "Version $NEW_VERSION"
      git push origin $NEW_VERSION 
    
    # And finally creating a release on the tag
    - echo "running release_job for Tag $NEW_VERSION"
    - release-cli create --description "$description" --tag-name "$NEW_VERSION" --ref "$CI_COMMIT_SHA" --assets-link "{\"url\":\"http://192.168.1.51/Sigzen-Team/$CI_PROJECT_NAME/-/compare/$VERSION...$NEW_VERSION\",\"name\":\"Changelog\"}"

  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always